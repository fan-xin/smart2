--- meta/recipes-devtools/python/python-smartpm_git.bb	2016-05-20 20:15:09.311000120 +0900
+++ meta-ubinux/recipes-contrib/python-smartpm/python-smartpm_git.bb	2016-05-20 20:15:07.352000120 +0900
@@ -26,13 +26,20 @@
           file://smart-cache.py-getPackages-matches-name-version.patch \
          "
 
+SRC_URI_append_class-nativesdk = " \
+          file://0001-Add-one-of-interface-named-tgui-into-smart.patch \
+          file://enviroment-smart.sh \
+         "
+
 SRCREV = "407a7eca766431257dcd1da15175cc36a1bb22d0"
 PV = "1.5+git${SRCPV}"
 
 S = "${WORKDIR}/git"
 
 # Options - rpm, qt4, gtk
-PACKAGECONFIG ??= "rpm"
+PACKAGECONFIG_class-target ??= "rpm"
+PACKAGECONFIG_class-native ??= "rpm"
+PACKAGECONFIG_class-nativesdk ??= "rpm"
 
 RPM_RDEP = "${PN}-backend-rpm"
 QT_RDEP = "${PN}-interface-qt4"
@@ -92,20 +99,68 @@
    fi
 }
 
-add_native_wrapper() {
-        create_wrapper ${D}/${bindir}/smart \
-		RPM_USRLIBRPM='`dirname $''realpath`'/${@os.path.relpath(d.getVar('libdir', True), d.getVar('bindir', True))}/rpm \
-		RPM_ETCRPM='$'{RPM_ETCRPM-'`dirname $''realpath`'/${@os.path.relpath(d.getVar('sysconfdir', True), d.getVar('bindir', True))}/rpm} \
-		RPM_LOCALEDIRRPM='`dirname $''realpath`'/${@os.path.relpath(d.getVar('datadir', True), d.getVar('bindir', True))}/locale
+create_wrapper_sdk () {
+	# Create a wrapper script where extra environment variables are needed
+	#
+	# These are useful to work around relocation issues, by setting environment
+	# variables which point to paths in the filesystem.
+	#
+	# Usage: create_wrapper FILENAME [[VAR=VALUE]..]
+
+	cmd=$1
+	shift
+
+	echo "Generating wrapper script for $cmd"
+
+	mv $cmd $cmd.real
+	cmdname=`basename $cmd`
+	cat <<END >$cmd
+#!/bin/bash
+realpath=\`readlink -fn \$0\`
+export $@
+log=0
+for arg in "\$@"
+do
+	if [ \$arg = "--interface=tgui" ];then
+	       	log=1
+		break
+	fi
+done
+if [ \$log == 1 ];then
+        exec -a \`dirname \$realpath\`/smart \`dirname \$realpath\`/smart.real "\$@" 2>smart.error | tee smart.log
+        echo "The install information was logged in smart.error and smart.log."
+else
+        exec -a \`dirname \$realpath\`/smart \`dirname \$realpath\`/smart.real "\$@"
+fi
+END
+	chmod +x $cmd
+}
+
+add_native_or_sdk_wrapper() {
+	if [ "$1" = "sdk" ]; then
+		RPM_ETCRPM='$'{RPM_ETCRPM-'$'SDKTARGETSYSROOT/${@os.path.relpath(d.getVar('sysconfdir', True), d.getVar('base_prefix', True))}/rpm}
+		create_wrapper_sdk ${D}/${bindir}/smart \
+			RPM_USRLIBRPM='`dirname $''realpath`'/${@os.path.relpath(d.getVar('libdir', True), d.getVar('bindir', True))}/rpm \
+			RPM_ETCRPM=${RPM_ETCRPM} \
+			RPM_LOCALEDIRRPM='`dirname $''realpath`'/${@os.path.relpath(d.getVar('datadir', True), d.getVar('bindir', True))}/locale
+	else
+		RPM_ETCRPM='$'{RPM_ETCRPM-'`dirname $''realpath`'/${@os.path.relpath(d.getVar('sysconfdir', True), d.getVar('bindir', True))}/rpm}
+        	create_wrapper ${D}/${bindir}/smart \
+			RPM_USRLIBRPM='`dirname $''realpath`'/${@os.path.relpath(d.getVar('libdir', True), d.getVar('bindir', True))}/rpm \
+			RPM_ETCRPM=${RPM_ETCRPM} \
+			RPM_LOCALEDIRRPM='`dirname $''realpath`'/${@os.path.relpath(d.getVar('datadir', True), d.getVar('bindir', True))}/locale
+	fi
 }
 
 do_install_append_class-native() {
         sed -i -e 's|^#!.*/usr/bin/env python|#! /usr/bin/env nativepython|' ${D}${bindir}/smart
-        add_native_wrapper
+        add_native_or_sdk_wrapper "native"
 }
 
 do_install_append_class-nativesdk() {
-        add_native_wrapper
+        add_native_or_sdk_wrapper "sdk"
+        install -d ${D}${bindir}/
+        install -m 0755 ${WORKDIR}/enviroment-smart.sh ${D}${bindir}/
 }
 
 PACKAGES = "${PN}-dev ${PN}-dbg ${PN}-doc smartpm \
